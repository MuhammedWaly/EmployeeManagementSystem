<div class="btn-group">
    <button type="button" class="btn btn-none border-0 dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
        <img src="@(ProfileImage == "" ? "../Images/BackgroundImages/kisspng-cartoon-finger-thumb-clip-art-employee-5ac82ebf215cb0.0197707315230686071367.png" : ProfileImage)"
             style="border-radius: 50%; margin-right: 5px; height: 60px;width: 62px;"/>
        <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu mt-2 border-0">
        <li>
            <div class="card">
                <div class="card-body">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <a class="text-primary fw-bold float-start text-decoration-none" style="font-family: Tahoma; cursor: pointer;">
                                <i class="bi bi-person-gear"></i>
                                Profile
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="card-footer">
                    <button class="btn btn-danger btn-sm fw-bold w-100" @onclick="LogoutClicked">
                        <i class="bi bi-box-arrow-left"></i>
                        Logout
                    </button>
                </div>
            </div>
        </li>
    </ul>
</div>

@code {
    public string ProfileImage { get; set; } = "";

    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var CustomAuthstateprovider = (CustomAuthenticationSatateProviders)AuthStateProvider;
        await CustomAuthstateprovider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/identity/account/Login", replace: true, forceLoad: true);
    }
}
